<?php

function lasso_webform_extra_form_alter(&$form, &$form_state, $form_id) {

   // for internal testing purposes we are using "webform_client_form_119"
   
   $active_form = variable_get('lasso_webform_id');
   // $form_arr = explode(",",$active_form);
   $form_arr = array_map('trim', explode(",", $active_form));
   
   foreach ($form_arr as $form_value) {
	   if ($form_id == $form_value) {
		   $form['#submit'][] = 'lasso_webform_extra_curl_submit';
	   }
   }

}

/*

***** Naming convention - Lasso's values to the module's values *****

First Name - first_name
Last Name - last_name
Emails[Primary] - emails_primary
Emails[Secondary] - emails_secondary
Emails[Tertiary] - emails_tertiary
Phones[Home] - phones_home
Phones[Cell] - phones_cell
Phones[Work] - phones_work
Phones[WorkExt] - phones_workext
Phones[Fax] - phones_fax
Phones[Pager] - phones_pager
Address - address
City - city
Province - province
PostalCode - postal_code
Country - country
NameTitle - name_title
Company - company
ContactPreference - contact_preference
Comments - comments
RatingID - rating_id
SourceTypeID - source_type_id
SecondarySourceTypeID - secondary_source_type_id
LassoUID - lasso_uid
ClientID - client_id
Project ID - project_id

For Lasso Tracking:
domainAccountId - domain_account_id
guid - guid

Custom questions also supported:
Questions[XXXXX] - questions_XXXXX

*/

function lasso_webform_extra_curl_submit(&$form, &$form_state) {

	// mapping Lasso's sometimes unusual required naming convention to the module's naming convention

	$curlData = array();
	
	foreach ($form['submitted'] as $key => $value) {
		
		if ($key == 'first_name') {
			$curlData['FirstName'] = $form['submitted']['first_name']['#value'];
		}
		
		if ($key == 'last_name') {
			$curlData['LastName'] = $form['submitted']['last_name']['#value'];
		}
		
		if ($key == 'emails_primary') {
			$curlData['Emails[Primary]'] = $form['submitted']['emails_primary']['#value'];
		}
		
		if ($key == 'emails_secondary') {
			$curlData['Emails[Secondary]'] = $form['submitted']['emails_secondary']['#value'];
		}
		
		if ($key == 'emails_tertiary') {
			$curlData['Emails[Tertiary]'] = $form['submitted']['emails_tertiary']['#value'];
		}
		
		if ($key == 'phones_home') {
			$curlData['Phones[Home]'] = $form['submitted']['phones_home']['#value'];
		}
		
		if ($key == 'phones_cell') {
			$curlData['Phones[Cell]'] = $form['submitted']['phones_cell']['#value'];
		}
		
		if ($key == 'phones_work') {
			$curlData['Phones[Work]'] = $form['submitted']['phones_work']['#value'];
		}
		
		if ($key == 'phones_workext') {
			$curlData['Phones[WorkExt]'] = $form['submitted']['phones_workext']['#value'];
		}
		
		if ($key == 'phones_fax') {
			$curlData['Phones[Fax]'] = $form['submitted']['phones_fax']['#value'];
		}
		
		if ($key == 'phones_pager') {
			$curlData['Phones[Pager]'] = $form['submitted']['phones_pager']['#value'];
		}
		
		if ($key == 'address') {
			$curlData['Address'] = $form['submitted']['address']['#value'];
		}
		
		if ($key == 'city') {
			$curlData['City'] = $form['submitted']['city']['#value'];
		}
		
		if ($key == 'province') {
			$curlData['Province'] = $form['submitted']['province']['#value'];
		}
		
		if ($key == 'postal_code') {
			$curlData['PostalCode'] = $form['submitted']['postal_code']['#value'];
		}
		
		if ($key == 'country') {
			$curlData['Country'] = $form['submitted']['country']['#value'];
		}
		
		if ($key == 'name_title') {
			$curlData['NameTitle'] = $form['submitted']['name_title']['#value'];
		}
		
		if ($key == 'company') {
			$curlData['Company'] = $form['submitted']['company']['#value'];
		}
		
		if ($key == 'contact_preference') {
			$curlData['ContactPreference'] = $form['submitted']['contact_preference']['#value'];
		}
		
		if ($key == 'comments') {
			$curlData['Comments'] = $form['submitted']['comments']['#value'];
		}
		
		if ($key == 'lasso_uid') {
			$curlData['LassoUID'] = $form['submitted']['lasso_uid']['#value'];
		}
		
		if ($key == 'client_id') {
			$curlData['ClientID'] = $form['submitted']['client_id']['#value'];
		}
		
		if ($key == 'project_id') {
			$curlData['ProjectID'] = $form['submitted']['project_id']['#value'];
		}
		
		if ($key == 'secondary_source_type_id') {
			$curlData['SecondarySourceTypeID'] = $form['submitted']['secondary_source_type_id']['#value'];
		}
		
		if ($key == 'rating_id') {
			$curlData['RatingID'] = $form['submitted']['rating_id']['#value'];
		}
		
		if($key == 'domain_account_id') {
			$curlData['domainAccountId'] = $form['submitted']['domain_account_id']['#value'];
		}
		
		if($key == 'guid') {
			$curlData['guid'] = $form['submitted']['guid']['#value'];
		}
		
		if('questions_' == substr($key,0,10)) {
			$qID = substr($key,11);
			$qLassoID = 'Questions['.$qID.']';
			$curlData[$qLassoID] = $form['submitted'][$key]['#value'];
		}
		
	}

	$curlQuery = http_build_query($curlData);
	
	// test url = https://app.lassocrm.com/registrant_signup/test
	// main url = https://app.lassocrm.com/registrant_signup/
	
	$url = variable_get('lasso_webform_url');

	$ch = curl_init();
	// curl_setopt($ch, CURLOPT_URL, variable_get('lasso_webform_url'));
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_POSTFIELDS, $curlQuery);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 15);
	curl_setopt($ch, CURLOPT_MAXREDIRS, 0);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

	$result = curl_exec($ch);
    $error = curl_error($ch);
	
	// $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
	$response = curl_getinfo($ch, CURLINFO_RESPONSE_CODE);
	
	if ($result === FALSE) {
		watchdog('Lasso Webform', 'Failed to post using cURL:<br>'.print_r($curlQuery,TRUE).'<br>Target URL: '.print_r($url,TRUE).'<br>Error: '.print_r(curl_error($ch),TRUE).'<br>Error Code: '.print_r(curl_errno($ch),TRUE), array(), WATCHDOG_ERROR);
	} else {
		watchdog('Lasso Webform', 'Posted the following using cURL:<br>'.print_r($curlQuery,TRUE).'<br>Target URL: '.print_r($url,TRUE).'<br>Response: '.print_r($response,TRUE));
	}
	
	curl_close($ch);

}

// Drupal admin functions

function lasso_webform_extra_menu() {
  $items = array();

  $items['admin/config/content/lasso'] = array(
    'title' => 'Lasso Integration Settings',
    'description' => 'Integration of Drupal 7 and Lasso CRM.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lasso_webform_extra_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function lasso_webform_extra_admin($form, &$form_state) {

	$form['lasso_webform_url'] = array(
		'#type' => 'textfield',
		'#title' => t('The Lasso URL'),
		'#default_value' => variable_get('lasso_webform_url', array('')),
		'#size' => 100,
		// '#maxlength' => 50,
		'#description' => t('The URL of the Lasso server.'),
		'#required' => TRUE,
	);

	$form['lasso_webform_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Webform Form IDs'),
		'#default_value' => variable_get('lasso_webform_id', array('')),
		'#size' => 100,
		'#description' => t('Enter Webform IDs [e.g. webform_client_form_###]. To enter more than one, seperate each ID with a comma.'),
		'#required' => TRUE,
	);

	return system_settings_form($form);

}
 
function lasso_webform_extra_contents() {
	 
	$today = getdate();
	 
	$start_time = mktime(0, 0, 0, $today['mon'],($today['mday'] = 7), $today['year']);
	$end_time = time();
	 
	$lasso_url = variable_get('lasso_webform_url', array(''));
	 
	$query = db_select('node', 'n')
		->fields('n', array('nid', 'title', 'created'))
		->condition('status', 1) //Published.
		->condition('created', array($start_time, $end_time), 'BETWEEN')
		->orderBy('created', 'DESC') //Most recent first.
		->range(0, $lasso_url) //NEW LINE
		->execute();
	return $query;

}