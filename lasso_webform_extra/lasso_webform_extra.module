<?php

function lasso_webform_extra_form_alter(&$form, &$form_state, $form_id) {
   //only want form with nid 119 to submit externally 
   //Note that "webform_client_form_119" means modify the Webform form for the node with NID "1171". Adjust to match whichever webform node's form you're modifying
   if($form_id == 'webform_client_form_119') {

			$form['#submit'][] = 'lasso_webform_extra_curl_submit';
			
       }
}

function lasso_webform_extra_curl_submit(&$form, &$form_state) {
/*
	$curlData = array(
		'FirstName' => $form['submitted']['firstName']['#value'],
		'LastName' => $form['submitted']['lastName']['#value'],
		'Emails[Primary]' => $form['submitted']['email']['#value'],
		'Phones[Home]' => $form['submitted']['phone']['#value'],
		'LassoUID' => $form['submitted']['lassoUID']['#value'],
		'ClientID' => $form['submitted']['clientID']['#value'],
		'ProjectID' => $form['submitted']['projectID']['#value'],
		'SecondarySourceTypeID' => $form['submitted']['SecondarySourceTypeID']['#value'],
		'RatingID' => $form['submitted']['RatingID']['#value'],
	);
*/
	$curlData = array();
	
	foreach ($form['submitted'] as $key => $value) {
		
		if ($key == 'firstName') {
			$curlData['FirstName'] = $form['submitted']['firstName']['#value'];
		}
		
		if ($key == 'lastName') {
			$curlData['LastName'] = $form['submitted']['lastName']['#value'];
		}
		
		if ($key == 'email') {
			$curlData['Emails[Primary]'] = $form['submitted']['email']['#value'];
		}
		
		if ($key == 'phone') {
			$curlData['Phones[Home]'] = $form['submitted']['phone']['#value'];
		}
		
		if ($key == 'lassoUID') {
			$curlData['LassoUID'] = $form['submitted']['lassoUID']['#value'];
		}
		
		if ($key == 'clientID') {
			$curlData['ClientID'] = $form['submitted']['clientID']['#value'];
		}
		
		if ($key == 'projectID') {
			$curlData['ProjectID'] = $form['submitted']['projectID']['#value'];
		}
		
		if ($key == 'SecondarySourceTypeID') {
			$curlData['SecondarySourceTypeID'] = $form['submitted']['SecondarySourceTypeID']['#value'];
		}
		
		if ($key == 'RatingID') {
			$curlData['RatingID'] = $form['submitted']['RatingID']['#value'];
		}
		
	}

	$curlQuery = http_build_query($curlData);
	
	// test url = https://app.lassocrm.com/registrant_signup/test
	// main url = https://app.lassocrm.com/registrant_signup/

	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, variable_get('lasso_webform_url'));
	curl_setopt($ch, CURLOPT_POSTFIELDS, $curlQuery);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 15);
	curl_setopt($ch, CURLOPT_MAXREDIRS, 0);
	curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);
	curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

	$result = curl_exec($ch);
    $error = curl_error($ch);
	
	// $http_code = curl_getinfo($ch, CURLINFO_HTTP_CODE);
	$response = curl_getinfo($ch, CURLINFO_RESPONSE_CODE);
	
	if ($result === FALSE) {
		watchdog('Lasso Webform', 'Failed to post using cURL: '.print_r($curlQuery,TRUE).' Target URL: '.print_r($url,TRUE).' Error: '.print_r(curl_error($ch),TRUE).' Error Code: '.print_r(curl_errno($ch),TRUE));
	} else {
		watchdog('Lasso Webform', 'Posted the following using cURL: '.print_r($curlQuery,TRUE).' Target URL: '.print_r($url,TRUE).' Response: '.print_r($response,TRUE));
	}
	
	curl_close($ch);

}

// Drupal admin functions

function lasso_webform_extra_menu() {
  $items = array();

  $items['admin/config/content/lasso'] = array(
    'title' => 'Remote Lasso URL',
    'description' => 'The URL of the Lasso server.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lasso_webform_extra_admin'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}

function lasso_webform_extra_admin($form, &$form_state) {

  $form['lasso_webform_url'] = array(
    '#type' => 'textfield',
    '#title' => t('The Lasso URL'),
    '#default_value' => variable_get('lasso_webform_url', 3),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t('The URL of the Lasso server.'),
    '#required' => TRUE,
  );

  return system_settings_form($form);

}
 
 function lasso_webform_extra_contents() {
	 
	 $today = getdate();
	 
	 $start_time = mktime(0, 0, 0, $today['mon'],($today['mday'] = 7), $today['year']);
	 $end_time = time();
	 
	 $lasso_url = variable_get('lasso_webform_url', 3);
	 
	 $query = db_select('node', 'n')
		->fields('n', array('nid', 'title', 'created'))
		->condition('status', 1) //Published.
		->condition('created', array($start_time, $end_time), 'BETWEEN')
		->orderBy('created', 'DESC') //Most recent first.
		->range(0, $lasso_url) //NEW LINE
		->execute();
	return $query;

}